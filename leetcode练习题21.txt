21、合并两个有序链表

将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 

 

示例 1：
输入：l1 = [1,2,4], l2 = [1,3,4]
输出：[1,1,2,3,4,4]

提示：

两个链表的节点数目范围是 [0, 50]
-100 <= Node.val <= 100
l1 和 l2 均按 非递减顺序 排列


思路：逐次比较两个链表，把小的结点尾插到一个新的链表

struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){
    
    if(l1 == NULL)
    {
           return l2;
    }
    if(l2 == NULL)
    {
           return l1;
    }

    struct ListNode* head = NULL , * tail = NULL;
     
    //先取一个小的去做第一个结点，方便后面尾插
    if(l1->val < l2->val)
    {
           head = tail = l1;
           l1 = l1->next;
    }
    else
    {
           head = tail = l2;
           l2 = l2->next;
    }

    while(l1 && l2)
    {
           //取小的结点尾插到新链表
           if(l1->val < l2->val)
           {
                   tail->next = l1;
                   l1 = l1->next;
           }
           else
           {   
                   tail->next = l2;
                   l2 = l2->next;
           }
           tail = tail->next;
    }
    
    if(l1)
    {
          tail->next = l1;
    }
    if(l2)
    {
          tail->next = l2;
    }
    return head;
}
